// regex generated by chatgpt with this conversation
// https://chatgpt.com/share/6764b943-4e30-8011-9e10-334f781b5ff8

// Reflection mappings for pronouns and similar words.
const reflections = {
    "I": "you",
    "me": "you",
    "my": "your",
    "am": "are",
    "you": "I",
    "your": "my",
    "yours": "mine",
    "are": "am"
};

// A dictionary of responses based on various patterns.
const responses = {
    "hello|hi|hey": [
        "Hello! How are you feeling today?",
        "Hi there! What’s on your mind?",
        "Hey! How can I help you?"
    ],
    "you remind me of (.*)": [
        "Why do you think I remind you of $1?",
        "What makes you think of $1 when talking to me?",
        "Is it a good feeling to be reminded of $1?"
    ],
    "(.*) mother|father|family|parent(.*)": [
        "Tell me more about your family.",
        "How does that make you feel about your family?",
        "What role does your family play in your thoughts?"
    ],
    "(.*) I need (.*)": [
        "Why do you need $2?",
        "Would getting $2 really help you?",
        "What if you didn’t need $2?"
    ],
    "(.*) I am (.*)": [
        "Why do you think you are $2?",
        "How long have you felt that way?",
        "What made you feel like $2?"
    ],
    "(.*) I feel (.*)": [
        "Why do you feel $2?",
        "Does feeling $2 happen often?",
        "How does that feeling affect you?"
    ],
    "(.*) (sorry|apologize)(.*)": [
        "No need to apologize.",
        "Apologies aren't necessary. Why do you feel that way?",
        "It’s okay to feel that way."
    ],
    "bye|goodbye|exit": [
        "Goodbye! Take care.",
        "Thank you for sharing. Goodbye!",
        "Bye! I’m here if you need to talk again."
    ],
    "(.*)": [
        "Can you tell me more?",
        "Why do you say that?",
        "How does that make you feel?",
        "What do you mean by that?",
        "Interesting... go on."
    ]
};

// Function to reflect responses.
function reflect(text) {
    return text
        .split(" ")
        .map(word => reflections[word.toLowerCase()] || word)
        .join(" ");
}

// Function to select a suitable response based on the user's input.
function respond(userInput) {
    for (const [pattern, responsesList] of Object.entries(responses)) {
        const regex = new RegExp(pattern, "i");
        const match = userInput.match(regex);

        if (match) {
            // Select a random response from the list.
            let response = responsesList[Math.floor(Math.random() * responsesList.length)];

            // Replace captured groups in the response, reflecting as needed.
            for (let i = 1; i < match.length; i++) {
                response = response.replace(`$${i}`, reflect(match[i]));
            }

            return response;
        }
    }

    // Default response if no patterns match.
    return "I'm not sure I understand. Can you elaborate?";
}

// Example usage.
console.log(respond("I feel happy")); // "Why do you feel happy?"
console.log(respond("I need some help")); // "Why do you need some help?"
console.log(respond("hello")); // "Hello! How are you feeling today?"
console.log(respond("goodbye")); // "Goodbye! Take care."
